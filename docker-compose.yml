services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: myappdb
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis
    container_name: redis-stack
    restart: always
    ports:
      - '6379:6379'

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    tty: false
    stdin_open: false
    logging:
      driver: "none"

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    tty: false
    stdin_open: false
    logging:
      driver: "none"

  nestjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs-app
    restart: always
    ports:
      - "3000:3000"
    env_file:
    - .env
    depends_on:
      - postgres
      - redis
      - kafka

volumes:
  pgdata:
